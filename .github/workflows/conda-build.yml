name: Conda build

on:
  schedule:
    - cron: '21 21 * * 5'
  push:
    branches: [ master ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  release:
    types: [published]

jobs:
  conda-build-arm64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup for Multi-platform image
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
          
      - name: Build and publish conda package arm64
        uses: docker/build-push-action@v4
        if: ${{ github.event_name == 'schedule' || github.event_name == 'release' }}
        with:
          context: .
          file: scripts/Dockerfile_conda_build
          platforms: linux/arm64
          build-args: |
            PYTHON_VERSION=${{ matrix.python-version }}
            ANACONDA_API_TOKEN=${{ secrets.CONDA_TOKEN }}

  conda-build-amd64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup for Multi-platform image
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
          
      - name: Build and publish conda package amd64
        uses: docker/build-push-action@v4
        with:
          context: .
          file: scripts/Dockerfile_conda_build
          platforms: linux/amd64
          build-args: |
            PYTHON_VERSION=${{ matrix.python-version }}
            ANACONDA_API_TOKEN=${{ secrets.CONDA_TOKEN }}

