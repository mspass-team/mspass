<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_data_gap_8cc" kind="file" language="C++">
    <compoundname>DataGap.cc</compoundname>
    <includes refid="_data_gap_8h" local="yes">mspass/seismic/DataGap.h</includes>
    <includes refid="_time_window_8h" local="yes">mspass/algorithms/TimeWindow.h</includes>
    <incdepgraph>
      <node id="4">
        <label>list</label>
      </node>
      <node id="5">
        <label>mspass/algorithms/TimeWindow.h</label>
        <link refid="_time_window_8h_source"/>
      </node>
      <node id="1">
        <label>/home/runner/work/mspass/mspass/cxx/src/lib/seismic/DataGap.cc</label>
        <link refid="_data_gap_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>set</label>
      </node>
      <node id="2">
        <label>mspass/seismic/DataGap.h</label>
        <link refid="_data_gap_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemspass">mspass</innernamespace>
    <innernamespace refid="namespacemspass_1_1seismic">mspass::seismic</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;mspass/seismic/DataGap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mspass/algorithms/TimeWindow.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemspass_1_1seismic" kindref="compound">mspass::seismic</ref>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemspass_1_1seismic" kindref="compound">mspass::seismic</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">mspass::algorithms;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="classmspass_1_1seismic_1_1_data_gap_1aa2a1e74ae7bf6ef9f3ff79153b890146" kindref="member">DataGap::DataGap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::list&lt;TimeWindow&gt;&amp;<sp/>twlist)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>twptr=twlist.begin();twptr!=twlist.end();++twptr)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>gaps.insert(*twptr);</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classmspass_1_1seismic_1_1_data_gap_1a29bd754c4f58ce811c4e6e1e4056927c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1seismic_1_1_data_gap_1a29bd754c4f58ce811c4e6e1e4056927c" kindref="member">DataGap::add_gap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1algorithms_1_1_time_window" kindref="compound">TimeWindow</ref><sp/>tw)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>insert_result<sp/>=<sp/>this-&gt;gaps.insert(tw);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!insert_result.second)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>land<sp/>here<sp/>if<sp/>tw<sp/>overlaps<sp/>or<sp/>duplicates<sp/>something<sp/>already<sp/>in<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>gaps<sp/>container.<sp/><sp/>first<sp/>in<sp/>this<sp/>case<sp/>contains<sp/>an<sp/>iterator<sp/>to<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>potential<sp/>duplicate.<sp/><sp/>We<sp/>have<sp/>to<sp/>resolve<sp/>which<sp/>to<sp/>keep*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmspass_1_1algorithms_1_1_time_window" kindref="compound">TimeWindow</ref><sp/>old_tw(*insert_result.first);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmspass_1_1algorithms_1_1_time_window" kindref="compound">TimeWindow</ref><sp/>new_tw;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tw.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a2277a3ea634dfe6ba5bc71296d93e76a" kindref="member">start</ref>&lt;old_tw.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a2277a3ea634dfe6ba5bc71296d93e76a" kindref="member">start</ref>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_tw.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a2277a3ea634dfe6ba5bc71296d93e76a" kindref="member">start</ref>=tw.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a2277a3ea634dfe6ba5bc71296d93e76a" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_tw.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a2277a3ea634dfe6ba5bc71296d93e76a" kindref="member">start</ref>=old_tw.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a2277a3ea634dfe6ba5bc71296d93e76a" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tw.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a916901f8d5d1dbb2bf38300bf28a2ec3" kindref="member">end</ref>&gt;old_tw.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a916901f8d5d1dbb2bf38300bf28a2ec3" kindref="member">end</ref>)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_tw.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a916901f8d5d1dbb2bf38300bf28a2ec3" kindref="member">end</ref>=tw.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a916901f8d5d1dbb2bf38300bf28a2ec3" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_tw.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a916901f8d5d1dbb2bf38300bf28a2ec3" kindref="member">end</ref>=old_tw.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a916901f8d5d1dbb2bf38300bf28a2ec3" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>gaps.erase(insert_result.first);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>gaps.insert(new_tw);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36" refid="classmspass_1_1seismic_1_1_data_gap_1adf3621238e5e44ac3c8fb014b24420b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1seismic_1_1_data_gap_1adf3621238e5e44ac3c8fb014b24420b4" kindref="member">DataGap::is_gap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ttest)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt(0.001);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>to<sp/>define<sp/>small<sp/>time<sp/>interval<sp/>smaller<sp/>than<sp/>most<sp/>sampling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gaps.empty())</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1algorithms_1_1_time_window" kindref="compound">TimeWindow</ref><sp/>twin;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>twin.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a2277a3ea634dfe6ba5bc71296d93e76a" kindref="member">start</ref><sp/>=<sp/>ttest<sp/>-<sp/>dt*0.5;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>twin.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a916901f8d5d1dbb2bf38300bf28a2ec3" kindref="member">end</ref><sp/>=<sp/>ttest<sp/>+<sp/>dt*0.5;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gaps.find(twin)==gaps.end())</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classmspass_1_1seismic_1_1_data_gap_1a794ed8d8f2d1e3bb3b7923bb133fa916" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1seismic_1_1_data_gap_1a965fe5d75c39296d2ea32641d7d8db69" kindref="member">DataGap::has_gap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1algorithms_1_1_time_window" kindref="compound">TimeWindow</ref><sp/>twin)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gaps.empty())</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gaps.find(twin)==gaps.end())</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57" refid="classmspass_1_1seismic_1_1_data_gap_1ac1a5133f17e4e741f8b7560c46d1d204" refkind="member"><highlight class="normal">std::list&lt;TimeWindow&gt;<sp/><ref refid="classmspass_1_1seismic_1_1_data_gap_1ac1a5133f17e4e741f8b7560c46d1d204" kindref="member">DataGap::get_gaps</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="58"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>std::list&lt;TimeWindow&gt;<sp/>result;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sptr=this-&gt;gaps.begin();<sp/>sptr!=this-&gt;gaps.end();<sp/>++sptr)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(*sptr);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64" refid="classmspass_1_1seismic_1_1_data_gap_1afd6343a1dc097ea5676239f62125af18" refkind="member"><highlight class="normal"><ref refid="classmspass_1_1seismic_1_1_data_gap" kindref="compound">DataGap</ref><sp/><ref refid="classmspass_1_1seismic_1_1_data_gap_1afd6343a1dc097ea5676239f62125af18" kindref="member">DataGap::subset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1algorithms_1_1_time_window" kindref="compound">TimeWindow</ref><sp/>tw)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="65"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>could<sp/>be<sp/>implemented<sp/>with<sp/>the<sp/>set<sp/>equal_range<sp/>method<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/>*<sp/>but<sp/>these<sp/>objects<sp/>are<sp/>expected<sp/>to<sp/>normally<sp/>be<sp/>very<sp/>small</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/>*<sp/>and<sp/>it<sp/>is<sp/>a<sp/>lot<sp/>clearer<sp/>what<sp/>this<sp/>algorithm<sp/>does.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><ref refid="classmspass_1_1seismic_1_1_data_gap" kindref="compound">DataGap</ref><sp/>result;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>std::list&lt;TimeWindow&gt;<sp/>gaplist<sp/>=<sp/>this-&gt;get_gaps();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>twptr=<sp/>gaplist.begin();twptr!=gaplist.end();++twptr)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>((twptr-&gt;end)&gt;tw.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a2277a3ea634dfe6ba5bc71296d93e76a" kindref="member">start</ref>)<sp/>&amp;&amp;<sp/>((twptr-&gt;start)&lt;tw.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a916901f8d5d1dbb2bf38300bf28a2ec3" kindref="member">end</ref>))</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="classmspass_1_1seismic_1_1_data_gap_1a29bd754c4f58ce811c4e6e1e4056927c" kindref="member">add_gap</ref>(*twptr);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>std::set<sp/>iterators<sp/>are<sp/>always<sp/>effectively<sp/>const<sp/>and<sp/>the<sp/>const<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>cannot<sp/>be<sp/>cast<sp/>away.<sp/><sp/>Hence,<sp/>this<sp/>algorithm<sp/>is<sp/>much<sp/>more<sp/>complex</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>than<sp/>I<sp/>thought<sp/>it<sp/>would<sp/>be.<sp/><sp/>Have<sp/>to<sp/>make<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>gaps<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>container<sp/>and<sp/>edit<sp/>the<sp/>copy<sp/>before<sp/>then<sp/>having<sp/>to<sp/>use<sp/>the<sp/>add_gap</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>method<sp/>to<sp/>put<sp/>in<sp/>the<sp/>edited<sp/>value.<sp/><sp/>If<sp/>there<sp/>were<sp/>a<sp/>more<sp/>elegant<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>way<sp/>to<sp/>handle<sp/>the<sp/>const<sp/>problem<sp/>this<sp/>would<sp/>go<sp/>away.<sp/><sp/>I<sp/>think<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>another<sp/>element<sp/>is<sp/>the<sp/>custom<sp/>compare<sp/>operator<sp/>for<sp/>this<sp/>set<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>container.<sp/><sp/>Anyway<sp/>this<sp/>works<sp/>and<sp/>because<sp/>in<sp/>all<sp/>known<sp/>situations<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>the<sp/>gaps<sp/>set<sp/>will<sp/>be<sp/>small<sp/>this<sp/>inefficiency<sp/>is<sp/>probably<sp/>not<sp/>important.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classmspass_1_1seismic_1_1_data_gap_1a5ae88f269425dccb3013c490e6c72295" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1seismic_1_1_data_gap_1a5ae88f269425dccb3013c490e6c72295" kindref="member">DataGap::translate_origin</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>origin_time)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>std::set&lt;TimeWindow,TimeWindowCmp&gt;<sp/>translated_gaps;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptr=this-&gt;gaps.begin();ptr!=this-&gt;gaps.end();++ptr)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmspass_1_1algorithms_1_1_time_window" kindref="compound">TimeWindow</ref><sp/>tw(*ptr);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>tw.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a2277a3ea634dfe6ba5bc71296d93e76a" kindref="member">start</ref><sp/>-=<sp/>origin_time;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>tw.<ref refid="classmspass_1_1algorithms_1_1_time_window_1a916901f8d5d1dbb2bf38300bf28a2ec3" kindref="member">end</ref><sp/>-=<sp/>origin_time;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>translated_gaps.insert(tw);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>this-&gt;clear_gaps();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptr=translated_gaps.begin();ptr!=translated_gaps.end();++ptr)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;add_gap(*ptr);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105" refid="classmspass_1_1seismic_1_1_data_gap_1a23f2f494e7932e012097309c8e08b901" refkind="member"><highlight class="normal"><ref refid="classmspass_1_1seismic_1_1_data_gap" kindref="compound">DataGap</ref>&amp;<sp/><ref refid="classmspass_1_1seismic_1_1_data_gap_1a23f2f494e7932e012097309c8e08b901" kindref="member">DataGap::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1seismic_1_1_data_gap" kindref="compound">DataGap</ref>&amp;<sp/>parent)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">!=(&amp;parent))</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gaps=parent.<ref refid="classmspass_1_1seismic_1_1_data_gap_1a29c06c530f6b02c7d94c21b08af9c384" kindref="member">gaps</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113" refid="classmspass_1_1seismic_1_1_data_gap_1a5108ed469b93d3bf4da693da6af0972b" refkind="member"><highlight class="normal"><ref refid="classmspass_1_1seismic_1_1_data_gap" kindref="compound">DataGap</ref>&amp;<sp/><ref refid="classmspass_1_1seismic_1_1_data_gap_1a5108ed469b93d3bf4da693da6af0972b" kindref="member">DataGap::operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1seismic_1_1_data_gap" kindref="compound">DataGap</ref>&amp;<sp/>parent)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptr=parent.<ref refid="classmspass_1_1seismic_1_1_data_gap_1a29c06c530f6b02c7d94c21b08af9c384" kindref="member">gaps</ref>.begin();ptr!=parent.<ref refid="classmspass_1_1seismic_1_1_data_gap_1a29c06c530f6b02c7d94c21b08af9c384" kindref="member">gaps</ref>.end();++ptr)<sp/>this-&gt;add_gap(*ptr);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>namespace<sp/>encapsulation</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/mspass/mspass/cxx/src/lib/seismic/DataGap.cc"/>
  </compounddef>
</doxygen>
