<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine" kind="class" language="C++" prot="public">
    <compoundname>mspass::algorithms::deconvolution::CNRDeconEngine</compoundname>
    <basecompoundref refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator" prot="public" virt="non-virtual">mspass::algorithms::deconvolution::FFTDeconOperator</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1af37d8b256456e99eadac81a2543101d1" prot="private" static="no" mutable="no">
        <type>CNR3C_algorithms</type>
        <definition>CNR3C_algorithms mspass::algorithms::deconvolution::CNRDeconEngine::algorithm</definition>
        <argsstring></argsstring>
        <name>algorithm</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::algorithm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="104" column="22" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1ad4c700aaca33c8f3702065fd8d4e5ed6" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mspass::algorithms::deconvolution::CNRDeconEngine::damp</definition>
        <argsstring></argsstring>
        <name>damp</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::damp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="111" column="12" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1ad6c1d8a29a575b1ba6273038d32bee16" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mspass::algorithms::deconvolution::CNRDeconEngine::noise_floor</definition>
        <argsstring></argsstring>
        <name>noise_floor</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::noise_floor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="112" column="12" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a9372f034c48e64a68426d021daad0bc8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mspass::algorithms::deconvolution::CNRDeconEngine::band_snr_floor</definition>
        <argsstring></argsstring>
        <name>band_snr_floor</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::band_snr_floor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="114" column="12" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a11e6f47da4ae5871d7659b3f1c2014af" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mspass::algorithms::deconvolution::CNRDeconEngine::operator_dt</definition>
        <argsstring></argsstring>
        <name>operator_dt</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::operator_dt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="115" column="12" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a9ab420773b8d2ab693d789f31fa467b8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mspass::algorithms::deconvolution::CNRDeconEngine::shaping_wavelet_number_poles</definition>
        <argsstring></argsstring>
        <name>shaping_wavelet_number_poles</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::shaping_wavelet_number_poles</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="116" column="9" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a1a0f11a292f0d04bbd073aa948b71f1b" prot="private" static="no" mutable="no">
        <type><ref refid="classmspass_1_1algorithms_1_1deconvolution_1_1_shaping_wavelet" kindref="compound">mspass::algorithms::deconvolution::ShapingWavelet</ref></type>
        <definition>mspass::algorithms::deconvolution::ShapingWavelet mspass::algorithms::deconvolution::CNRDeconEngine::shapingwavelet</definition>
        <argsstring></argsstring>
        <name>shapingwavelet</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::shapingwavelet</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="117" column="55" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a17fcdac3bd40a59b1b3ee9dbd9a78e01" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mspass::algorithms::deconvolution::CNRDeconEngine::winlength</definition>
        <argsstring></argsstring>
        <name>winlength</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::winlength</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="122" column="9" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a7eee182cf35db43253d02b413ca6694b" prot="private" static="no" mutable="no">
        <type><ref refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine" kindref="compound">mspass::algorithms::deconvolution::MTPowerSpectrumEngine</ref></type>
        <definition>mspass::algorithms::deconvolution::MTPowerSpectrumEngine mspass::algorithms::deconvolution::CNRDeconEngine::signal_engine</definition>
        <argsstring></argsstring>
        <name>signal_engine</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::signal_engine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="123" column="62" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1aae818a260aca29edbdd645f5c18a876d" prot="private" static="no" mutable="no">
        <type><ref refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine" kindref="compound">mspass::algorithms::deconvolution::MTPowerSpectrumEngine</ref></type>
        <definition>mspass::algorithms::deconvolution::MTPowerSpectrumEngine mspass::algorithms::deconvolution::CNRDeconEngine::noise_engine</definition>
        <argsstring></argsstring>
        <name>noise_engine</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::noise_engine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="124" column="62" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a4bb9418dfeabe70dfbc472924f4b677b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mspass::algorithms::deconvolution::CNRDeconEngine::snr_regularization_floor</definition>
        <argsstring></argsstring>
        <name>snr_regularization_floor</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::snr_regularization_floor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="132" column="12" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1ae43f7064238465b6c16a85a370bfa2cc" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mspass::algorithms::deconvolution::CNRDeconEngine::regularization_bandwidth_fraction</definition>
        <argsstring></argsstring>
        <name>regularization_bandwidth_fraction</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::regularization_bandwidth_fraction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="135" column="12" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a66ccb2a20531cffb0da7d574a84cc988" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mspass::algorithms::deconvolution::CNRDeconEngine::peak_snr[3]</definition>
        <argsstring>[3]</argsstring>
        <name>peak_snr</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::peak_snr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="136" column="12" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a2f13b05098f1ee1b7cc077f328407186" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mspass::algorithms::deconvolution::CNRDeconEngine::signal_bandwidth_fraction[3]</definition>
        <argsstring>[3]</argsstring>
        <name>signal_bandwidth_fraction</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::signal_bandwidth_fraction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="137" column="12" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a9a6df9946238ce2167e1369d06a0a346" prot="private" static="no" mutable="no">
        <type><ref refid="classmspass_1_1algorithms_1_1deconvolution_1_1_complex_array" kindref="compound">mspass::algorithms::deconvolution::ComplexArray</ref></type>
        <definition>mspass::algorithms::deconvolution::ComplexArray mspass::algorithms::deconvolution::CNRDeconEngine::winv</definition>
        <argsstring></argsstring>
        <name>winv</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::winv</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="138" column="53" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1adbee6ddbfde806a444f3817d13d77b17" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mspass::algorithms::deconvolution::CNRDeconEngine::winv_t0_lag</definition>
        <argsstring></argsstring>
        <name>winv_t0_lag</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::winv_t0_lag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="142" column="9" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="142" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a58acfaf8cec748270f9f59926f919524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mspass::algorithms::deconvolution::CNRDeconEngine::CNRDeconEngine</definition>
        <argsstring>()</argsstring>
        <name>CNRDeconEngine</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::CNRDeconEngine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="34" column="3" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/CNRDeconEngine.cc" bodystart="16" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1ad14341392e06e116c169da92ba8d2cd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mspass::algorithms::deconvolution::CNRDeconEngine::CNRDeconEngine</definition>
        <argsstring>(const mspass::utility::AntelopePf &amp;pf)</argsstring>
        <name>CNRDeconEngine</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::CNRDeconEngine</qualifiedname>
        <param>
          <type>const <ref refid="classmspass_1_1utility_1_1_antelope_pf" kindref="compound">mspass::utility::AntelopePf</ref> &amp;</type>
          <declname>pf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct from AntelopePf container.</para>
<para>This is currently the only valid constructor for this object. The operator requires a fair number of parameters for construction that include secondary groups of parameters in a hierarchy. An AntelopePf is one way to handle that with a human readable form. An alternative is yaml but that is not currently supported as an external format. The AntelopePf object API is a generic way to handle parameter data hierarchies that is in MsPASS. Most user&apos;s will interact with the object only indirectly via python wrappers. All a user needs to do is define all the required key-value pairs and get the obscure pf format correct. To use this constructor one passes an instance of the object of type AntelopePf that is normally constructed by reading a text file with the &quot;pf&quot; format or retrieved from another AntelopePf with the get_branch method. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="66" column="3" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/CNRDeconEngine.cc" bodystart="34" bodyend="132"/>
        <references refid="classmspass_1_1utility_1_1_metadata_1ad69a5786d997104df560775f4f688b02" compoundref="_metadata_8h" startline="135" endline="152">mspass::utility::Metadata::get_double</references>
        <references refid="classmspass_1_1utility_1_1_metadata_1a78f3a01e1b1deccd84a0833bea4ef462" compoundref="_metadata_8h" startline="159" endline="177">mspass::utility::Metadata::get_int</references>
        <references refid="classmspass_1_1utility_1_1_metadata_1a7ace0c05ebb00b3c383cb8cccd225504" compoundref="_metadata_8h" startline="184" endline="202">mspass::utility::Metadata::get_long</references>
        <references refid="classmspass_1_1utility_1_1_metadata_1aa56da98a52f03babd67bf9fb55c40f3a" compoundref="_metadata_8h" startline="213" endline="219">mspass::utility::Metadata::get_string</references>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1aa8af4a4dc7ffbcdb495ebb59616c77b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mspass::algorithms::deconvolution::CNRDeconEngine::CNRDeconEngine</definition>
        <argsstring>(const CNRDeconEngine &amp;parent)</argsstring>
        <name>CNRDeconEngine</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::CNRDeconEngine</qualifiedname>
        <param>
          <type>const <ref refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine" kindref="compound">CNRDeconEngine</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="67" column="3" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/CNRDeconEngine.cc" bodystart="134" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1aa1a2258f2c1e50a9468e2d8b7b73b983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mspass::algorithms::deconvolution::CNRDeconEngine::initialize_inverse_operator</definition>
        <argsstring>(const mspass::seismic::TimeSeries &amp;wavelet, const mspass::seismic::TimeSeries &amp;noise_data)</argsstring>
        <name>initialize_inverse_operator</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::initialize_inverse_operator</qualifiedname>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_time_series" kindref="compound">mspass::seismic::TimeSeries</ref> &amp;</type>
          <declname>wavelet</declname>
        </param>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_time_series" kindref="compound">mspass::seismic::TimeSeries</ref> &amp;</type>
          <declname>noise_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="68" column="8" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/CNRDeconEngine.cc" bodystart="182" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a843ec013a826ac64c9a4806c8fa0c13c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mspass::algorithms::deconvolution::CNRDeconEngine::initialize_inverse_operator</definition>
        <argsstring>(const mspass::seismic::TimeSeries &amp;wavelet, const mspass::seismic::PowerSpectrum &amp;noise_spectrum)</argsstring>
        <name>initialize_inverse_operator</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::initialize_inverse_operator</qualifiedname>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_time_series" kindref="compound">mspass::seismic::TimeSeries</ref> &amp;</type>
          <declname>wavelet</declname>
        </param>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_power_spectrum" kindref="compound">mspass::seismic::PowerSpectrum</ref> &amp;</type>
          <declname>noise_spectrum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="70" column="8" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/CNRDeconEngine.cc" bodystart="207" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a1ca522738ca5d00b8ac7fc15808a68f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual mspass::algorithms::deconvolution::CNRDeconEngine::~CNRDeconEngine</definition>
        <argsstring>()</argsstring>
        <name>~CNRDeconEngine</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::~CNRDeconEngine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="72" column="11" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a7fbb7b10c3cb9875ee4a088bb7fda002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmspass_1_1seismic_1_1_seismogram" kindref="compound">mspass::seismic::Seismogram</ref></type>
        <definition>Seismogram mspass::algorithms::deconvolution::CNRDeconEngine::process</definition>
        <argsstring>(const mspass::seismic::Seismogram &amp;d, const mspass::seismic::PowerSpectrum &amp;psnoise, const double fl, const double fh)</argsstring>
        <name>process</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::process</qualifiedname>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_seismogram" kindref="compound">mspass::seismic::Seismogram</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_power_spectrum" kindref="compound">mspass::seismic::PowerSpectrum</ref> &amp;</type>
          <declname>psnoise</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>fl</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>fh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="73" column="31" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/CNRDeconEngine.cc" bodystart="503" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a2933aa5528eee5318f07468b0bf913e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double mspass::algorithms::deconvolution::CNRDeconEngine::get_operator_dt</definition>
        <argsstring>() const</argsstring>
        <name>get_operator_dt</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::get_operator_dt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="76" column="10" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a0e13be848c10d8eca118766757f6e703" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmspass_1_1seismic_1_1_power_spectrum" kindref="compound">mspass::seismic::PowerSpectrum</ref></type>
        <definition>PowerSpectrum mspass::algorithms::deconvolution::CNRDeconEngine::compute_noise_spectrum</definition>
        <argsstring>(const mspass::seismic::TimeSeries &amp;d2use)</argsstring>
        <name>compute_noise_spectrum</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::compute_noise_spectrum</qualifiedname>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_time_series" kindref="compound">mspass::seismic::TimeSeries</ref> &amp;</type>
          <declname>d2use</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute noise spectrum using internal Multitaper operator. Normally used for noise spectrum but can be used for signal. Necessary to assure consistent scaling between signal and noise spectrum estimators. <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="84" column="34" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/CNRDeconEngine.cc" bodystart="227" bodyend="249"/>
        <references refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1aa3c10c25ea2c6b82cf8bbe2991f16bfe" compoundref="_m_t_power_spectrum_engine_8cc" startline="124" endline="187">mspass::algorithms::deconvolution::MTPowerSpectrumEngine::apply</references>
        <references refid="classmspass_1_1seismic_1_1_basic_time_series_1aa96e795f96b5050996d791f5b6f3867d" compoundref="_basic_time_series_8h" startline="154" endline="154">mspass::seismic::BasicTimeSeries::dead</references>
        <references refid="classmspass_1_1seismic_1_1_power_spectrum_1a920cd0761252df4312168f4571165f2b" compoundref="_power_spectrum_8h" startline="28">mspass::seismic::PowerSpectrum::elog</references>
        <references refid="classmspass_1_1utility_1_1_error_logger_1aa69873ba0aebf67e9ba24d01992c0bcf" compoundref="_error_logger_8cc" startline="81" endline="86">mspass::utility::ErrorLogger::log_error</references>
        <references refid="classmspass_1_1seismic_1_1_basic_time_series_1a347b349bb4e1f0e65978dfcd45ae3472" compoundref="_basic_time_series_8h" startline="188" endline="188">mspass::seismic::BasicTimeSeries::npts</references>
        <references refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a10d4b650fdedd815652c1e4e86a0e715" compoundref="_m_t_power_spectrum_engine_8h" startline="106" endline="109">mspass::algorithms::deconvolution::MTPowerSpectrumEngine::number_tapers</references>
        <references refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a1dadcf9ec587fa2d48d04066ba1d55b4" compoundref="_m_t_power_spectrum_engine_8h" startline="134" endline="141">mspass::algorithms::deconvolution::MTPowerSpectrumEngine::set_df</references>
        <references refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a114db709279ea8ab275ba69fbdcbec13" compoundref="_m_t_power_spectrum_engine_8h" startline="96" endline="99">mspass::algorithms::deconvolution::MTPowerSpectrumEngine::taper_length</references>
        <references refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1accf94d6d1dff859884d9c0aa1719994a" compoundref="_m_t_power_spectrum_engine_8h" startline="101" endline="104">mspass::algorithms::deconvolution::MTPowerSpectrumEngine::time_bandwidth_product</references>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1aa41b6f260547a11ca73f214d84c3a053" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmspass_1_1seismic_1_1_power_spectrum" kindref="compound">mspass::seismic::PowerSpectrum</ref></type>
        <definition>PowerSpectrum mspass::algorithms::deconvolution::CNRDeconEngine::compute_noise_spectrum</definition>
        <argsstring>(const mspass::seismic::Seismogram &amp;d2use)</argsstring>
        <name>compute_noise_spectrum</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::compute_noise_spectrum</qualifiedname>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_seismogram" kindref="compound">mspass::seismic::Seismogram</ref> &amp;</type>
          <declname>d2use</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute noise spectrum from three component data.</para>
<para>Overloaded version returns average power spectrum of all three components. Measure of overall 3c power comparable to scalar signal power. Could do sum of component spectra but that would cause a scaling problem for use in regularization. For most data this will tend to be dominated by the component with the highest noise level </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="93" column="34" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/CNRDeconEngine.cc" bodystart="250" bodyend="291"/>
        <references refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1aa3c10c25ea2c6b82cf8bbe2991f16bfe" compoundref="_m_t_power_spectrum_engine_8cc" startline="124" endline="187">mspass::algorithms::deconvolution::MTPowerSpectrumEngine::apply</references>
        <references refid="classmspass_1_1seismic_1_1_basic_spectrum_1a331f89b8216f9717ac906e922d7c2cff" compoundref="_basic_spectrum_8h" startline="80" endline="80">mspass::seismic::BasicSpectrum::dead</references>
        <references refid="classmspass_1_1seismic_1_1_basic_time_series_1aa96e795f96b5050996d791f5b6f3867d" compoundref="_basic_time_series_8h" startline="154" endline="154">mspass::seismic::BasicTimeSeries::dead</references>
        <references refid="classmspass_1_1seismic_1_1_power_spectrum_1a920cd0761252df4312168f4571165f2b" compoundref="_power_spectrum_8h" startline="28">mspass::seismic::PowerSpectrum::elog</references>
        <references refid="classmspass_1_1utility_1_1_error_logger_1aa69873ba0aebf67e9ba24d01992c0bcf" compoundref="_error_logger_8cc" startline="81" endline="86">mspass::utility::ErrorLogger::log_error</references>
        <references refid="classmspass_1_1seismic_1_1_power_spectrum_1a7675c66d7f1aa8d7b4e9437564af4beb" compoundref="_power_spectrum_8h" startline="97" endline="97">mspass::seismic::PowerSpectrum::nf</references>
        <references refid="classmspass_1_1seismic_1_1_basic_time_series_1a347b349bb4e1f0e65978dfcd45ae3472" compoundref="_basic_time_series_8h" startline="188" endline="188">mspass::seismic::BasicTimeSeries::npts</references>
        <references refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a10d4b650fdedd815652c1e4e86a0e715" compoundref="_m_t_power_spectrum_engine_8h" startline="106" endline="109">mspass::algorithms::deconvolution::MTPowerSpectrumEngine::number_tapers</references>
        <references refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a1dadcf9ec587fa2d48d04066ba1d55b4" compoundref="_m_t_power_spectrum_engine_8h" startline="134" endline="141">mspass::algorithms::deconvolution::MTPowerSpectrumEngine::set_df</references>
        <references refid="classmspass_1_1seismic_1_1_power_spectrum_1a924f5b005efdeef3f2da34355821e0c0" compoundref="_power_spectrum_8h" startline="22">mspass::seismic::PowerSpectrum::spectrum</references>
        <references refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a114db709279ea8ab275ba69fbdcbec13" compoundref="_m_t_power_spectrum_engine_8h" startline="96" endline="99">mspass::algorithms::deconvolution::MTPowerSpectrumEngine::taper_length</references>
        <references refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1accf94d6d1dff859884d9c0aa1719994a" compoundref="_m_t_power_spectrum_engine_8h" startline="101" endline="104">mspass::algorithms::deconvolution::MTPowerSpectrumEngine::time_bandwidth_product</references>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1afc69ac8bda5709e8f28aeb08f869dcfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmspass_1_1seismic_1_1_time_series" kindref="compound">mspass::seismic::TimeSeries</ref></type>
        <definition>TimeSeries mspass::algorithms::deconvolution::CNRDeconEngine::ideal_output</definition>
        <argsstring>()</argsstring>
        <name>ideal_output</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::ideal_output</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="95" column="31" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/CNRDeconEngine.cc" bodystart="616" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a859cd9734d2200e11b4275fe4a2f949d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmspass_1_1seismic_1_1_time_series" kindref="compound">mspass::seismic::TimeSeries</ref></type>
        <definition>TimeSeries mspass::algorithms::deconvolution::CNRDeconEngine::actual_output</definition>
        <argsstring>(const mspass::seismic::TimeSeries &amp;wavelet)</argsstring>
        <name>actual_output</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::actual_output</qualifiedname>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_time_series" kindref="compound">mspass::seismic::TimeSeries</ref> &amp;</type>
          <declname>wavelet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="96" column="31" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/CNRDeconEngine.cc" bodystart="623" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a8a1d1ceb550eea93f5d100337bec0660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmspass_1_1seismic_1_1_time_series" kindref="compound">mspass::seismic::TimeSeries</ref></type>
        <definition>TimeSeries mspass::algorithms::deconvolution::CNRDeconEngine::inverse_wavelet</definition>
        <argsstring>(const mspass::seismic::TimeSeries &amp;wavelet, const double t0shift)</argsstring>
        <name>inverse_wavelet</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::inverse_wavelet</qualifiedname>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_time_series" kindref="compound">mspass::seismic::TimeSeries</ref> &amp;</type>
          <declname>wavelet</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>t0shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="98" column="31" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/CNRDeconEngine.cc" bodystart="731" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1adbaea0375ab6bf31421909243557b21b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmspass_1_1utility_1_1_metadata" kindref="compound">mspass::utility::Metadata</ref></type>
        <definition>Metadata mspass::algorithms::deconvolution::CNRDeconEngine::QCMetrics</definition>
        <argsstring>()</argsstring>
        <name>QCMetrics</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::QCMetrics</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="100" column="29" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/CNRDeconEngine.cc" bodystart="753" bodyend="764"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a184de2d6c2b98a820cc905b7c7065e46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine" kindref="compound">CNRDeconEngine</ref> &amp;</type>
        <definition>CNRDeconEngine &amp; mspass::algorithms::deconvolution::CNRDeconEngine::operator=</definition>
        <argsstring>(const CNRDeconEngine &amp;parent)</argsstring>
        <name>operator=</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine" kindref="compound">CNRDeconEngine</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="101" column="18" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/CNRDeconEngine.cc" bodystart="157" bodyend="181"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1aaa2d3614da09e01f0b2eeb45e9e6e491" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mspass::algorithms::deconvolution::CNRDeconEngine::update_shaping_wavelet</definition>
        <argsstring>(const double fl, const double fh)</argsstring>
        <name>update_shaping_wavelet</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::update_shaping_wavelet</qualifiedname>
        <param>
          <type>const double</type>
          <declname>fl</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>fh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="144" column="10" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/CNRDeconEngine.cc" bodystart="593" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a5adfe3991d22117b0dad1681a721ad1d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mspass::algorithms::deconvolution::CNRDeconEngine::compute_winv</definition>
        <argsstring>(const mspass::seismic::TimeSeries &amp;wavelet, const mspass::seismic::PowerSpectrum &amp;psnoise)</argsstring>
        <name>compute_winv</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::compute_winv</qualifiedname>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_time_series" kindref="compound">mspass::seismic::TimeSeries</ref> &amp;</type>
          <declname>wavelet</declname>
        </param>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_power_spectrum" kindref="compound">mspass::seismic::PowerSpectrum</ref> &amp;</type>
          <declname>psnoise</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>private method of this class that computes the internal variable &quot;winv&quot; - a <ref refid="classmspass_1_1algorithms_1_1deconvolution_1_1_complex_array" kindref="compound">ComplexArray</ref> containing the spectrum of the inverse wavelet. It assumes the content of the internally cached &quot;wavelet&quot; TimeSeries object contains the data to be used to compute winv. Which inverse operator to use is controlled by this-&gt;algorithm.</para>
<para>Do not use this method outside of the internal use. Its intrinsic state dependence on loading the wavelet data before calling it is very error prone. It is done here largely for convenience to modularize the algorithm. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="146" column="10" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/CNRDeconEngine.cc" bodystart="327" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a6f56083fbbb5f87b59d5ee19a319713f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mspass::algorithms::deconvolution::CNRDeconEngine::compute_gwl_inverse</definition>
        <argsstring>(const mspass::seismic::TimeSeries &amp;wavelet, const mspass::seismic::PowerSpectrum &amp;psnoise)</argsstring>
        <name>compute_gwl_inverse</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::compute_gwl_inverse</qualifiedname>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_time_series" kindref="compound">mspass::seismic::TimeSeries</ref> &amp;</type>
          <declname>wavelet</declname>
        </param>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_power_spectrum" kindref="compound">mspass::seismic::PowerSpectrum</ref> &amp;</type>
          <declname>psnoise</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="148" column="10" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/CNRDeconEngine.cc" bodystart="349" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a1e9008e7549a2477870f7bbbf27f0cf8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mspass::algorithms::deconvolution::CNRDeconEngine::compute_gdamp_inverse</definition>
        <argsstring>(const mspass::seismic::TimeSeries &amp;wavelet, const mspass::seismic::PowerSpectrum &amp;psnoise)</argsstring>
        <name>compute_gdamp_inverse</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::compute_gdamp_inverse</qualifiedname>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_time_series" kindref="compound">mspass::seismic::TimeSeries</ref> &amp;</type>
          <declname>wavelet</declname>
        </param>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_power_spectrum" kindref="compound">mspass::seismic::PowerSpectrum</ref> &amp;</type>
          <declname>psnoise</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="150" column="10" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/CNRDeconEngine.cc" bodystart="423" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a1c3c6bed53bb4f2ccea884811781eee6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void mspass::algorithms::deconvolution::CNRDeconEngine::serialize</definition>
        <argsstring>(Archive &amp;ar, const unsigned int version)</argsstring>
        <name>serialize</name>
        <qualifiedname>mspass::algorithms::deconvolution::CNRDeconEngine::serialize</qualifiedname>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="154" column="8" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="154" bodyend="189"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>mspass::algorithms::deconvolution::CNRDeconEngine</label>
        <link refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>mspass::algorithms::deconvolution::FFTDeconOperator</label>
        <link refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>mspass::algorithms::deconvolution::CNRDeconEngine</label>
        <link refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>mspass::algorithms::deconvolution::ComplexArray</label>
        <link refid="classmspass_1_1algorithms_1_1deconvolution_1_1_complex_array"/>
      </node>
      <node id="2">
        <label>mspass::algorithms::deconvolution::FFTDeconOperator</label>
        <link refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator"/>
        <childnode refid="3" relation="usage">
          <edgelabel>winv</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" line="31" column="1" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/CNRDeconEngine.h" bodystart="32" bodyend="190"/>
    <listofallmembers>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a859cd9734d2200e11b4275fe4a2f949d" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>actual_output</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1af37d8b256456e99eadac81a2543101d1" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>algorithm</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a9372f034c48e64a68426d021daad0bc8" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>band_snr_floor</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1a3d3f1776e68b20fff386d4bc19e51550" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>change_shift</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1aeaceb977e9797e483bf3a8ba030743c6" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>change_size</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1a0ce6831f67065f17fe7b30aa014eaaf3" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>changeparameter</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a58acfaf8cec748270f9f59926f919524" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>CNRDeconEngine</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1ad14341392e06e116c169da92ba8d2cd0" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>CNRDeconEngine</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1aa8af4a4dc7ffbcdb495ebb59616c77b9" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>CNRDeconEngine</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a1e9008e7549a2477870f7bbbf27f0cf8" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>compute_gdamp_inverse</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a6f56083fbbb5f87b59d5ee19a319713f" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>compute_gwl_inverse</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a0e13be848c10d8eca118766757f6e703" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>compute_noise_spectrum</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1aa41b6f260547a11ca73f214d84c3a053" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>compute_noise_spectrum</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a5adfe3991d22117b0dad1681a721ad1d" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>compute_winv</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1ad4c700aaca33c8f3702065fd8d4e5ed6" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>damp</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1adf84c339f3b540543ee8c3487997908a" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>df</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1a1aa1a6a6bf04b24d0c76d45e73c3b421" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>FFTDeconOperator</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1a6851bec74d3f288eaf1de36cf1d7953b" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>FFTDeconOperator</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1af3df395f4ff5bae8b891bee33f107e46" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>FFTDeconOperator</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1a3473dc7f359332dbf5a685efe30a684b" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>FourierInverse</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a2933aa5528eee5318f07468b0bf913e3" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>get_operator_dt</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1ad63458bb8ad8a04a66de1c140152fc96" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>get_shift</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1abf21bce1d1519ece5e9879d03e7f7e5a" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>get_size</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1afc69ac8bda5709e8f28aeb08f869dcfd" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>ideal_output</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1aa1a2258f2c1e50a9468e2d8b7b73b983" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>initialize_inverse_operator</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a843ec013a826ac64c9a4806c8fa0c13c" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>initialize_inverse_operator</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a8a1d1ceb550eea93f5d100337bec0660" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>inverse_wavelet</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1aa8619effc38e9e0f3927c73eb9b838f0" prot="protected" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>nfft</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1aae818a260aca29edbdd645f5c18a876d" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>noise_engine</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1ad6c1d8a29a575b1ba6273038d32bee16" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>noise_floor</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a184de2d6c2b98a820cc905b7c7065e46" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>operator=</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1ae1040f97ddf7bb7bd2c33ac9a7f99a79" prot="public" virt="non-virtual" ambiguityscope="mspass::algorithms::deconvolution::FFTDeconOperator::"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>operator=</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a11e6f47da4ae5871d7659b3f1c2014af" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>operator_dt</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1a6f399747b50f4f98f46b643f23af0ee1" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>operator_shift</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1a494e951fb5fceffc545e411a8932d782" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>operator_size</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a66ccb2a20531cffb0da7d574a84cc988" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>peak_snr</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a7fbb7b10c3cb9875ee4a088bb7fda002" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>process</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1adbaea0375ab6bf31421909243557b21b" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>QCMetrics</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1ae43f7064238465b6c16a85a370bfa2cc" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>regularization_bandwidth_fraction</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1a7034bf16dcf7ea16563a7032ce19b08e" prot="protected" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>sample_shift</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a1c3c6bed53bb4f2ccea884811781eee6" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>serialize</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a9ab420773b8d2ab693d789f31fa467b8" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>shaping_wavelet_number_poles</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a1a0f11a292f0d04bbd073aa948b71f1b" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>shapingwavelet</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a2f13b05098f1ee1b7cc077f328407186" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>signal_bandwidth_fraction</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a7eee182cf35db43253d02b413ca6694b" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>signal_engine</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a4bb9418dfeabe70dfbc472924f4b677b" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>snr_regularization_floor</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1aaa2d3614da09e01f0b2eeb45e9e6e491" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>update_shaping_wavelet</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1a3480b78a08228fc2b2c79809b98335d5" prot="protected" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>wavetable</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a17fcdac3bd40a59b1b3ee9dbd9a78e01" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>winlength</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a9a6df9946238ce2167e1369d06a0a346" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>winv</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1adbee6ddbfde806a444f3817d13d77b17" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>winv_t0_lag</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1a1121967f87437c76cfbb1d8a8fb592e8" prot="protected" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>workspace</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_c_n_r_decon_engine_1a1ca522738ca5d00b8ac7fc15808a68f6" prot="public" virt="virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>~CNRDeconEngine</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_f_f_t_decon_operator_1a5c9a93bff093cc3f5fbb7991e2812c23" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::CNRDeconEngine</scope><name>~FFTDeconOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
