<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classmspass_1_1seismic_1_1_power_spectrum" kind="class" language="C++" prot="public">
    <compoundname>mspass::seismic::PowerSpectrum</compoundname>
    <basecompoundref refid="classmspass_1_1utility_1_1_metadata" prot="public" virt="non-virtual">mspass::utility::Metadata</basecompoundref>
    <includes refid="_power_spectrum_8h" local="no">PowerSpectrum.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmspass_1_1seismic_1_1_power_spectrum_1af4023fd0eee89576ca87ce0df394a672" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double mspass::seismic::PowerSpectrum::df</definition>
        <argsstring></argsstring>
        <name>df</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frequency bin interval. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" line="15" column="10" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1seismic_1_1_power_spectrum_1a53bb92009189c7d297b20656cdf820a4" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double mspass::seismic::PowerSpectrum::f0</definition>
        <argsstring></argsstring>
        <name>f0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Frequencey of first sample of spectrum array (usually 0). Be warned a valid construction of a <ref refid="classmspass_1_1seismic_1_1_power_spectrum" kindref="compound">PowerSpectrum</ref> requires f0+df*nf() be Nyquist. <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" line="19" column="10" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1seismic_1_1_power_spectrum_1affca22f42c28a0fe251405b227674ce6" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string mspass::seismic::PowerSpectrum::spectrum_type</definition>
        <argsstring></argsstring>
        <name>spectrum_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" line="20" column="15" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1seismic_1_1_power_spectrum_1a924f5b005efdeef3f2da34355821e0c0" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; mspass::seismic::PowerSpectrum::spectrum</definition>
        <argsstring></argsstring>
        <name>spectrum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" line="21" column="15" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1seismic_1_1_power_spectrum_1a920cd0761252df4312168f4571165f2b" prot="public" static="no" mutable="no">
        <type><ref refid="classmspass_1_1utility_1_1_error_logger" kindref="compound">mspass::utility::ErrorLogger</ref></type>
        <definition>mspass::utility::ErrorLogger mspass::seismic::PowerSpectrum::elog</definition>
        <argsstring></argsstring>
        <name>elog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" line="22" column="32" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmspass_1_1seismic_1_1_power_spectrum_1a787087776cc0ca2b33e24e83cac5f801" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mspass::seismic::PowerSpectrum::PowerSpectrum</definition>
        <argsstring>()</argsstring>
        <name>PowerSpectrum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" line="23" column="3" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/seismic/PowerSpectrum.cc" bodystart="9" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1seismic_1_1_power_spectrum_1ace419f03d3d017601e16f6b0287cfaf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>mspass::seismic::PowerSpectrum::PowerSpectrum</definition>
        <argsstring>(const mspass::utility::Metadata &amp;md, const std::vector&lt; T &gt; &amp;d, const double dfin, const std::string nm)</argsstring>
        <name>PowerSpectrum</name>
        <param>
          <type>const <ref refid="classmspass_1_1utility_1_1_metadata" kindref="compound">mspass::utility::Metadata</ref> &amp;</type>
          <declname>md</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>dfin</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>nm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" line="24" column="15" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" bodystart="73" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1seismic_1_1_power_spectrum_1a377c8508a72f2aff53da0d528de12bb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mspass::seismic::PowerSpectrum::PowerSpectrum</definition>
        <argsstring>(const PowerSpectrum &amp;parent)</argsstring>
        <name>PowerSpectrum</name>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_power_spectrum" kindref="compound">PowerSpectrum</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" line="26" column="3" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/seismic/PowerSpectrum.cc" bodystart="15" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1seismic_1_1_power_spectrum_1a5045c9886a94320a3f351058cd3d6ea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmspass_1_1seismic_1_1_power_spectrum" kindref="compound">PowerSpectrum</ref> &amp;</type>
        <definition>PowerSpectrum &amp; mspass::seismic::PowerSpectrum::operator=</definition>
        <argsstring>(const PowerSpectrum &amp;parent)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_power_spectrum" kindref="compound">PowerSpectrum</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" line="27" column="17" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/seismic/PowerSpectrum.cc" bodystart="25" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1seismic_1_1_power_spectrum_1a8306434c52e142797c227fed6f91fd82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmspass_1_1seismic_1_1_power_spectrum" kindref="compound">PowerSpectrum</ref> &amp;</type>
        <definition>PowerSpectrum &amp; mspass::seismic::PowerSpectrum::operator+=</definition>
        <argsstring>(const PowerSpectrum &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_power_spectrum" kindref="compound">PowerSpectrum</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Standard accumulation operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Sometimes we need to sume power spectra. Type examplel would be total noise amplitude on a 3C seismogram or average noise amplitude in an array of instruments. This can be used to build such sum in the usual way. Add spectral elements sample by sample.</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>will</parametername>
</parameternamelist>
<parameterdescription>
<para>throw a MsPaSSError if the left and right side are not equal length. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" line="37" column="17" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/seismic/PowerSpectrum.cc" bodystart="38" bodyend="59"/>
        <references refid="classmspass_1_1utility_1_1_metadata_1a153ca69299a4d70aa0c6e69e8c70a767" compoundref="_metadata_8cc" startline="163" endline="166">mspass::utility::Metadata::size</references>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1seismic_1_1_power_spectrum_1abbfb81f3ad4a3f0a1488b869a60148a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>vector&lt; double &gt; mspass::seismic::PowerSpectrum::amplitude</definition>
        <argsstring>() const</argsstring>
        <name>amplitude</name>
        <briefdescription>
<para>Compute amplitude spectrum from power spectrum. </para>
        </briefdescription>
        <detaileddescription>
<para>The amplitude spectrum is sqrt of the power values. This is a convenience class to return the values in that form. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" line="42" column="15" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/seismic/PowerSpectrum.cc" bodystart="60" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1seismic_1_1_power_spectrum_1a8cdc3c59b4e204b1b04d0c1951e73076" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double mspass::seismic::PowerSpectrum::amplitude</definition>
        <argsstring>(const double f) const</argsstring>
        <name>amplitude</name>
        <param>
          <type>const double</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Amplitude at a given frequency. </para>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded method that returns the interpolated amplitude (sqrt(power)) at a requested frequency. If the frequency exceeds the Nyquist the function silently returns 0.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>is the frequency for which amplitude is desired.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>will</parametername>
</parameternamelist>
<parameterdescription>
<para>throw a MsPaSSError if f is less than 0. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" line="53" column="10" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/seismic/PowerSpectrum.cc" bodystart="68" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1seismic_1_1_power_spectrum_1ae4580db0b75a6db419467d2374dfdd80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int mspass::seismic::PowerSpectrum::nf</definition>
        <argsstring>() const</argsstring>
        <name>nf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" line="54" column="7" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1seismic_1_1_power_spectrum_1ad2f979f7662aba3e46f277d9c45fd07d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double mspass::seismic::PowerSpectrum::frequency</definition>
        <argsstring>(const int sample_number) const</argsstring>
        <name>frequency</name>
        <param>
          <type>const int</type>
          <declname>sample_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" line="55" column="10" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" bodystart="55" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1seismic_1_1_power_spectrum_1aef0b54806f9e5367df7dfa03804a2f87" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double mspass::seismic::PowerSpectrum::Nyquist</definition>
        <argsstring>() const</argsstring>
        <name>Nyquist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" line="64" column="10" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1seismic_1_1_power_spectrum_1abf25df63633c262938c7957c70e4df37" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int mspass::seismic::PowerSpectrum::sample_number</definition>
        <argsstring>(const double f) const</argsstring>
        <name>sample_number</name>
        <param>
          <type>const double</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" line="68" column="7" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" bodystart="68" bodyend="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class defining the concept of a power psectrum. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>mspass::utility::Metadata</label>
        <link refid="classmspass_1_1utility_1_1_metadata"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>mspass::utility::BasicMetadata</label>
        <link refid="classmspass_1_1utility_1_1_basic_metadata"/>
      </node>
      <node id="1">
        <label>mspass::seismic::PowerSpectrum</label>
        <link refid="classmspass_1_1seismic_1_1_power_spectrum"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>mspass::utility::Metadata</label>
        <link refid="classmspass_1_1utility_1_1_metadata"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>mspass::utility::ErrorLogger</label>
        <link refid="classmspass_1_1utility_1_1_error_logger"/>
      </node>
      <node id="3">
        <label>mspass::utility::BasicMetadata</label>
        <link refid="classmspass_1_1utility_1_1_basic_metadata"/>
      </node>
      <node id="1">
        <label>mspass::seismic::PowerSpectrum</label>
        <link refid="classmspass_1_1seismic_1_1_power_spectrum"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>elog</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" line="9" column="1" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/PowerSpectrum.h" bodystart="10" bodyend="72"/>
    <listofallmembers>
      <member refid="classmspass_1_1seismic_1_1_power_spectrum_1abbfb81f3ad4a3f0a1488b869a60148a2" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>amplitude</name></member>
      <member refid="classmspass_1_1seismic_1_1_power_spectrum_1a8cdc3c59b4e204b1b04d0c1951e73076" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>amplitude</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1aa288eb54e6fafb8af13f71e2f3dce4a2" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>append_chain</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1af9aea7916d2b11f9f1e94b7d84b8db23" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>begin</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a20c1da469f6e0a073b291a680425f9e8" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>change_key</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1abaa3b11bec830a2ab4f93e79623af591" prot="protected" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>changed_or_set</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a610962d5ca59e48d1b2833e613bbad1d" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>clear_modified</name></member>
      <member refid="classmspass_1_1seismic_1_1_power_spectrum_1af4023fd0eee89576ca87ce0df394a672" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>df</name></member>
      <member refid="classmspass_1_1seismic_1_1_power_spectrum_1a920cd0761252df4312168f4571165f2b" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>elog</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a7f1e227ec1acaab97343ecbf47bedac4" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>end</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a096d3ea32cc03c3f9ae9c69cd9ee28ba" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>erase</name></member>
      <member refid="classmspass_1_1seismic_1_1_power_spectrum_1a53bb92009189c7d297b20656cdf820a4" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>f0</name></member>
      <member refid="classmspass_1_1seismic_1_1_power_spectrum_1ad2f979f7662aba3e46f277d9c45fd07d" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>frequency</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1af2b1cac0f295d9ab5fb240b8b5e12539" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>get</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a5d6876ed25c3f5d93052239ec828a3c5" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>get</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a991516933477580b6b59dd578819df06" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>get_any</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a2631da9d437572ee0781ed9bd96a3ed3" prot="public" virt="virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>get_bool</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1ad69a5786d997104df560775f4f688b02" prot="public" virt="virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>get_double</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a78f3a01e1b1deccd84a0833bea4ef462" prot="public" virt="virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>get_int</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a7ace0c05ebb00b3c383cb8cccd225504" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>get_long</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1aa56da98a52f03babd67bf9fb55c40f3a" prot="public" virt="virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>get_string</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a1e96e8682297fe8b21acf09b4d399cc6" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>is_defined</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a52e2040555616a39b900aa0831c3bd10" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>keys</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1af564bb9ced4cc480d71a1e13c3fa582e" prot="protected" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>md</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a4a87cd6a6f8fc5cdbee65cb85958cb2c" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>Metadata</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a5255fc3ae6accb650f221c9065a92eff" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>Metadata</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1afa617529be5501b6b059091118a1a51f" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>Metadata</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a0fec2640022e944afe1ae1180e741da5" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>modified</name></member>
      <member refid="classmspass_1_1seismic_1_1_power_spectrum_1ae4580db0b75a6db419467d2374dfdd80" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>nf</name></member>
      <member refid="classmspass_1_1seismic_1_1_power_spectrum_1aef0b54806f9e5367df7dfa03804a2f87" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>Nyquist</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1afbd50c491ecc4d42cf2b4213b8bc3327" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>operator+</name></member>
      <member refid="classmspass_1_1seismic_1_1_power_spectrum_1a8306434c52e142797c227fed6f91fd82" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>operator+=</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1afadcdb42814abc1448a78d1d9f3d44aa" prot="public" virt="non-virtual" ambiguityscope="mspass::utility::Metadata::"><scope>mspass::seismic::PowerSpectrum</scope><name>operator+=</name></member>
      <member refid="classmspass_1_1seismic_1_1_power_spectrum_1a5045c9886a94320a3f351058cd3d6ea3" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>operator=</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1aadbae283dfdb87a82832519a9955fdfa" prot="public" virt="non-virtual" ambiguityscope="mspass::utility::Metadata::"><scope>mspass::seismic::PowerSpectrum</scope><name>operator=</name></member>
      <member refid="classmspass_1_1seismic_1_1_power_spectrum_1a787087776cc0ca2b33e24e83cac5f801" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>PowerSpectrum</name></member>
      <member refid="classmspass_1_1seismic_1_1_power_spectrum_1ace419f03d3d017601e16f6b0287cfaf0" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>PowerSpectrum</name></member>
      <member refid="classmspass_1_1seismic_1_1_power_spectrum_1a377c8508a72f2aff53da0d528de12bb7" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>PowerSpectrum</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1ab2162ed3e7349998ee06ace77645bf77" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>put</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1aec776bbbbf8528903432d9b30d1272d8" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>put</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1aefee14db8cda9c7143a0eb7bf2d1be1f" prot="public" virt="virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>put</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a11ef6cbc1adec7964e2d9c3a4ead15b1" prot="public" virt="virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>put</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1ab3989b1152e9b7b3dcce36aaec89f46d" prot="public" virt="virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>put</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1adc016a9bb2288f1f0a7687cfa6844ceb" prot="public" virt="virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>put</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1aa60d283b9eaae245294914557c723c30" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>put</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a45c295b33cdbcc297b7429235b81de9a" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>put</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1add02049febdc316d70d0fb62e96b2e36" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>put_bool</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1aafaa017f0e16f37a81a6abdb406a1e08" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>put_double</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a5fe91d35373564958386f08915b7ce3c" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>put_int</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1ab1ede27ae9810767832f0879ccbfd234" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>put_long</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1aa8402af6778236df398ff0fe25911e21" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>put_object</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a5efd5678db951e3517c5667fefe93ddf" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>put_string</name></member>
      <member refid="classmspass_1_1seismic_1_1_power_spectrum_1abf25df63633c262938c7957c70e4df37" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>sample_number</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a153ca69299a4d70aa0c6e69e8c70a767" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>size</name></member>
      <member refid="classmspass_1_1seismic_1_1_power_spectrum_1a924f5b005efdeef3f2da34355821e0c0" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>spectrum</name></member>
      <member refid="classmspass_1_1seismic_1_1_power_spectrum_1affca22f42c28a0fe251405b227674ce6" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>spectrum_type</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1ad5cd3bfc81c7fccd83bbb30ef1c2774c" prot="public" virt="non-virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>type</name></member>
      <member refid="classmspass_1_1utility_1_1_basic_metadata_1a1d7a9ab1e25e01694cc733ad2b98c6b7" prot="public" virt="virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>~BasicMetadata</name></member>
      <member refid="classmspass_1_1utility_1_1_metadata_1a6d06560c0b169240031c6a274dc7990f" prot="public" virt="virtual"><scope>mspass::seismic::PowerSpectrum</scope><name>~Metadata</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
