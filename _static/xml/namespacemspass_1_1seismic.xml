<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespacemspass_1_1seismic" kind="namespace" language="C++">
    <compoundname>mspass::seismic</compoundname>
    <innerclass refid="classmspass_1_1seismic_1_1_basic_spectrum" prot="public">mspass::seismic::BasicSpectrum</innerclass>
    <innerclass refid="classmspass_1_1seismic_1_1_basic_time_series" prot="public">mspass::seismic::BasicTimeSeries</innerclass>
    <innerclass refid="classmspass_1_1seismic_1_1_core_seismogram" prot="public">mspass::seismic::CoreSeismogram</innerclass>
    <innerclass refid="classmspass_1_1seismic_1_1_core_time_series" prot="public">mspass::seismic::CoreTimeSeries</innerclass>
    <innerclass refid="classmspass_1_1seismic_1_1_data_gap" prot="public">mspass::seismic::DataGap</innerclass>
    <innerclass refid="classmspass_1_1seismic_1_1_ensemble" prot="public">mspass::seismic::Ensemble</innerclass>
    <innerclass refid="classmspass_1_1seismic_1_1_logging_ensemble" prot="public">mspass::seismic::LoggingEnsemble</innerclass>
    <innerclass refid="classmspass_1_1seismic_1_1_power_spectrum" prot="public">mspass::seismic::PowerSpectrum</innerclass>
    <innerclass refid="classmspass_1_1seismic_1_1_seismogram" prot="public">mspass::seismic::Seismogram</innerclass>
    <innerclass refid="classmspass_1_1seismic_1_1_seismogram_w_gaps" prot="public">mspass::seismic::SeismogramWGaps</innerclass>
    <innerclass refid="classmspass_1_1seismic_1_1_slowness_vector" prot="public">mspass::seismic::SlownessVector</innerclass>
    <innerclass refid="classmspass_1_1seismic_1_1_time_series" prot="public">mspass::seismic::TimeSeries</innerclass>
    <innerclass refid="classmspass_1_1seismic_1_1_time_series_w_gaps" prot="public">mspass::seismic::TimeSeriesWGaps</innerclass>
    <innerclass refid="classmspass_1_1seismic_1_1_time_window_cmp" prot="public">mspass::seismic::TimeWindowCmp</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacemspass_1_1seismic_1a0b8373068c66c7453bd012fe5367dbd2" prot="public" static="no" strong="yes">
        <type></type>
        <name>TimeReferenceType</name>
        <qualifiedname>mspass::seismic::TimeReferenceType</qualifiedname>
        <enumvalue id="namespacemspass_1_1seismic_1a0b8373068c66c7453bd012fe5367dbd2a9234324ddf6b4176b57d803a925b7961" prot="public">
          <name>UTC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use an absolute (usually UTC) time base - previously absolute in SEISPP. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemspass_1_1seismic_1a0b8373068c66c7453bd012fe5367dbd2a2ca9469819fb0fb61ff98e914a7ccca0" prot="public">
          <name>Relative</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Time is relative to some other standard like shot time </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Type of time standard for time series data. </para>
        </briefdescription>
        <detaileddescription>
<para>Time series data have two common standards. Absolute time means the time is an epoch time. Relative means time is some other arbitrary reference. An example is an arrival time reference frame where all data are set with time zero defined by a set of arrival time picks. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/BasicTimeSeries.h" line="14" column="1" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/BasicTimeSeries.h" bodystart="14" bodyend="18"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacemspass_1_1seismic_1a9bdfc71411e6ef751bb5daa7e97987d0" prot="public" static="no">
        <type><ref refid="classmspass_1_1seismic_1_1_ensemble" kindref="compound">Ensemble</ref>&lt; <ref refid="classmspass_1_1seismic_1_1_time_series" kindref="compound">TimeSeries</ref> &gt;</type>
        <definition>typedef Ensemble&lt;TimeSeries&gt; mspass::seismic::TimeSeriesEnsemble</definition>
        <argsstring></argsstring>
        <name>TimeSeriesEnsemble</name>
        <qualifiedname>mspass::seismic::TimeSeriesEnsemble</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Useful alias for Ensemble&lt;TimeSeries&gt; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/Ensemble.h" line="262" column="18" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/Ensemble.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacemspass_1_1seismic_1accd4b8b7754c4bec01071aad61edf3cc" prot="public" static="no">
        <type><ref refid="classmspass_1_1seismic_1_1_ensemble" kindref="compound">Ensemble</ref>&lt; <ref refid="classmspass_1_1seismic_1_1_seismogram" kindref="compound">Seismogram</ref> &gt;</type>
        <definition>typedef Ensemble&lt;Seismogram&gt; mspass::seismic::ThreeComponentEnsemble</definition>
        <argsstring></argsstring>
        <name>ThreeComponentEnsemble</name>
        <qualifiedname>mspass::seismic::ThreeComponentEnsemble</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Useful alias for Ensemble&lt;Seismogram&gt; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/Ensemble.h" line="264" column="18" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/Ensemble.h" bodystart="264" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacemspass_1_1seismic_1ac848a79911ca1930abf265f01a6d635f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_npts</definition>
        <argsstring>(&quot;npts&quot;)</argsstring>
        <name>SEISMICMD_npts</name>
        <qualifiedname>mspass::seismic::SEISMICMD_npts</qualifiedname>
        <param>
          <type>&quot;npts&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of data samples. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="18" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="18" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1a3f7a9857fd532d0e6800f2a316b50772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_dt</definition>
        <argsstring>(&quot;delta&quot;)</argsstring>
        <name>SEISMICMD_dt</name>
        <qualifiedname>mspass::seismic::SEISMICMD_dt</qualifiedname>
        <param>
          <type>&quot;delta&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>data sample interval in seconds. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="20" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="20" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1a1e5b45ce0ed02e9c1d154ea0434138c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_t0</definition>
        <argsstring>(&quot;starttime&quot;)</argsstring>
        <name>SEISMICMD_t0</name>
        <qualifiedname>mspass::seismic::SEISMICMD_t0</qualifiedname>
        <param>
          <type>&quot;starttime&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Time of first sample of data (epoch time or relative to some other time mark) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="23" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="23" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1aa4af747de9dc5b4dba5dc37de80a05eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_sampling_rate</definition>
        <argsstring>(&quot;sampling_rate&quot;)</argsstring>
        <name>SEISMICMD_sampling_rate</name>
        <qualifiedname>mspass::seismic::SEISMICMD_sampling_rate</qualifiedname>
        <param>
          <type>&quot;sampling_rate&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Data sampling frequency in Hz=1/s </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="25" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="25" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1ac1a7513c761787a80a1798f2f2e66235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_rlat</definition>
        <argsstring>(&quot;site_lat&quot;)</argsstring>
        <name>SEISMICMD_rlat</name>
        <qualifiedname>mspass::seismic::SEISMICMD_rlat</qualifiedname>
        <param>
          <type>&quot;site_lat&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>latitude of a seismic station/instrument in degrees - <ref refid="classmspass_1_1seismic_1_1_seismogram" kindref="compound">Seismogram</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="30" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="30" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1aaaa7deae118c2fabe6146f4e44facc2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_rlon</definition>
        <argsstring>(&quot;site_lon&quot;)</argsstring>
        <name>SEISMICMD_rlon</name>
        <qualifiedname>mspass::seismic::SEISMICMD_rlon</qualifiedname>
        <param>
          <type>&quot;site_lon&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>longitude of a seismic station/instrument in degrees - <ref refid="classmspass_1_1seismic_1_1_seismogram" kindref="compound">Seismogram</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="32" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="32" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1a8261a3979c07230a72a1d69d8d45b862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_relev</definition>
        <argsstring>(&quot;site_elev&quot;)</argsstring>
        <name>SEISMICMD_relev</name>
        <qualifiedname>mspass::seismic::SEISMICMD_relev</qualifiedname>
        <param>
          <type>&quot;site_elev&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>elevation of a seismic station/instrument in km (subtract emplacement depth for borehole instruments) - <ref refid="classmspass_1_1seismic_1_1_seismogram" kindref="compound">Seismogram</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="35" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="35" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1ae726d0c4329425d61fd1606336b18e4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_clat</definition>
        <argsstring>(&quot;channel_lat&quot;)</argsstring>
        <name>SEISMICMD_clat</name>
        <qualifiedname>mspass::seismic::SEISMICMD_clat</qualifiedname>
        <param>
          <type>&quot;channel_lat&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>latitude of a seismic station/instrument in degrees - <ref refid="classmspass_1_1seismic_1_1_time_series" kindref="compound">TimeSeries</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="40" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="40" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1ae7714c21f072de9472956add73bf014d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_clon</definition>
        <argsstring>(&quot;channel_lon&quot;)</argsstring>
        <name>SEISMICMD_clon</name>
        <qualifiedname>mspass::seismic::SEISMICMD_clon</qualifiedname>
        <param>
          <type>&quot;channel_lon&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>longitude of a seismic station/instrument in degrees - <ref refid="classmspass_1_1seismic_1_1_time_series" kindref="compound">TimeSeries</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="42" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="42" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1a9098b27e4b7c79ebe30901274f2d1e09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_celev</definition>
        <argsstring>(&quot;channel_elev&quot;)</argsstring>
        <name>SEISMICMD_celev</name>
        <qualifiedname>mspass::seismic::SEISMICMD_celev</qualifiedname>
        <param>
          <type>&quot;channel_elev&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>elevation of a seismic station/instrument in km (subtract emplacement depth for borehole instruments) - <ref refid="classmspass_1_1seismic_1_1_time_series" kindref="compound">TimeSeries</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="45" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="45" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1af6f66d6ba46332022801fc62f96168a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_hang</definition>
        <argsstring>(&quot;channel_hang&quot;)</argsstring>
        <name>SEISMICMD_hang</name>
        <qualifiedname>mspass::seismic::SEISMICMD_hang</qualifiedname>
        <param>
          <type>&quot;channel_hang&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Azimuth (in degree) of a seismometer component - horizontal angle </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="47" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="47" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1a477252b5b499a023541fdba2cb62bfe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_vang</definition>
        <argsstring>(&quot;channel_vang&quot;)</argsstring>
        <name>SEISMICMD_vang</name>
        <qualifiedname>mspass::seismic::SEISMICMD_vang</qualifiedname>
        <param>
          <type>&quot;channel_vang&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inclination from +up (in degree) of a seismometer component - vertical angle </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="50" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="50" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1a6185ce4ed163335717824e4802ac686f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_slat</definition>
        <argsstring>(&quot;source_lat&quot;)</argsstring>
        <name>SEISMICMD_slat</name>
        <qualifiedname>mspass::seismic::SEISMICMD_slat</qualifiedname>
        <param>
          <type>&quot;source_lat&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Latitude (in degrees) of the hypocenter of seismic source </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="57" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="57" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1aa9af0818785cfdf6d6389fe463f39fdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_slon</definition>
        <argsstring>(&quot;source_lon&quot;)</argsstring>
        <name>SEISMICMD_slon</name>
        <qualifiedname>mspass::seismic::SEISMICMD_slon</qualifiedname>
        <param>
          <type>&quot;source_lon&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Longitude (in degrees) of the hypocenter of seismic source </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="59" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="59" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1a7a434abd3d2465e73c54062a74d92150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_sdepth</definition>
        <argsstring>(&quot;source_depth&quot;)</argsstring>
        <name>SEISMICMD_sdepth</name>
        <qualifiedname>mspass::seismic::SEISMICMD_sdepth</qualifiedname>
        <param>
          <type>&quot;source_depth&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Depth (in km) of the hypocenter of seismic source </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="61" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="61" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1a6d89cd9142f9c69d7ecfa521dad9a1a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_stime</definition>
        <argsstring>(&quot;source_time&quot;)</argsstring>
        <name>SEISMICMD_stime</name>
        <qualifiedname>mspass::seismic::SEISMICMD_stime</qualifiedname>
        <param>
          <type>&quot;source_time&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin time of the hypocenter of a seismic source. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="63" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="63" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1a1254f7fb8e1be5b198218604ac9b3c8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_dfile</definition>
        <argsstring>(&quot;dfile&quot;)</argsstring>
        <name>SEISMICMD_dfile</name>
        <qualifiedname>mspass::seismic::SEISMICMD_dfile</qualifiedname>
        <param>
          <type>&quot;dfile&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>External data file name. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="65" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="65" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1ab8ff84666cf6d1c391987306eaad2546" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_dir</definition>
        <argsstring>(&quot;dir&quot;)</argsstring>
        <name>SEISMICMD_dir</name>
        <qualifiedname>mspass::seismic::SEISMICMD_dir</qualifiedname>
        <param>
          <type>&quot;dir&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Directory path to an external file (always used with dfile) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="67" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="67" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1a17279751e3795fee46d6a3cdfe427c33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_foff</definition>
        <argsstring>(&quot;foff&quot;)</argsstring>
        <name>SEISMICMD_foff</name>
        <qualifiedname>mspass::seismic::SEISMICMD_foff</qualifiedname>
        <param>
          <type>&quot;foff&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Offset in bytes from beginning of a file to first data sample. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="69" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="69" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1ab9de221412c0076cce8197b4f2e9df7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_tmatrix</definition>
        <argsstring>(&quot;tmatrix&quot;)</argsstring>
        <name>SEISMICMD_tmatrix</name>
        <qualifiedname>mspass::seismic::SEISMICMD_tmatrix</qualifiedname>
        <param>
          <type>&quot;tmatrix&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Holds transformation matrix in MsPASS use for <ref refid="classmspass_1_1seismic_1_1_seismogram" kindref="compound">Seismogram</ref>. <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="71" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="71" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1a8429ed597db1b001609ef812ed118e25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_uuid</definition>
        <argsstring>(&quot;uuid&quot;)</argsstring>
        <name>SEISMICMD_uuid</name>
        <qualifiedname>mspass::seismic::SEISMICMD_uuid</qualifiedname>
        <param>
          <type>&quot;uuid&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Universal Unique Identifier used for history. <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="73" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="73" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1ae150f608f6b8bf8a77f934f325170eb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_rawdata</definition>
        <argsstring>(&quot;rawdata&quot;)</argsstring>
        <name>SEISMICMD_rawdata</name>
        <qualifiedname>mspass::seismic::SEISMICMD_rawdata</qualifiedname>
        <param>
          <type>&quot;rawdata&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Boolean used to tag a history chain as beginning with raw data </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="75" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="75" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1a8585005cd5eddd7bc658b1c1bc901aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_net</definition>
        <argsstring>(&quot;net&quot;)</argsstring>
        <name>SEISMICMD_net</name>
        <qualifiedname>mspass::seismic::SEISMICMD_net</qualifiedname>
        <param>
          <type>&quot;net&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>network code (net component of SEED net:sta:chan) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="77" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="77" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1ab8e65fa46b1de2e84418ed22a20cf522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_sta</definition>
        <argsstring>(&quot;sta&quot;)</argsstring>
        <name>SEISMICMD_sta</name>
        <qualifiedname>mspass::seismic::SEISMICMD_sta</qualifiedname>
        <param>
          <type>&quot;sta&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>station code assigned to a spot on Earth (sta component of SEED net:sta:chan) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="80" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="80" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1ae39181fd7e5305ad63c7d50bcb082d47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_chan</definition>
        <argsstring>(&quot;chan&quot;)</argsstring>
        <name>SEISMICMD_chan</name>
        <qualifiedname>mspass::seismic::SEISMICMD_chan</qualifiedname>
        <param>
          <type>&quot;chan&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>channel name (e.g. HHZ, BHE, etc.) - normally a SEED channel code </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="82" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="82" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1a9bb3e908c48498c194aad416262578f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_loc</definition>
        <argsstring>(&quot;loc&quot;)</argsstring>
        <name>SEISMICMD_loc</name>
        <qualifiedname>mspass::seismic::SEISMICMD_loc</qualifiedname>
        <param>
          <type>&quot;loc&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>location code assigned to an instrument (loc component of SEED net:sta:chan) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="85" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="85" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1a88a01d6c4e1838b7bac28931b9cc8c58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_time_standard</definition>
        <argsstring>(&quot;time_standard&quot;)</argsstring>
        <name>SEISMICMD_time_standard</name>
        <qualifiedname>mspass::seismic::SEISMICMD_time_standard</qualifiedname>
        <param>
          <type>&quot;time_standard&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define time reference (normally UTC or Relative) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="87" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="87" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1a0951fef82377e868ee7cfcd4841979cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_t0_shift</definition>
        <argsstring>(&quot;starttime_shift&quot;)</argsstring>
        <name>SEISMICMD_t0_shift</name>
        <qualifiedname>mspass::seismic::SEISMICMD_t0_shift</qualifiedname>
        <param>
          <type>&quot;starttime_shift&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define the t0_shift attribute of <ref refid="classmspass_1_1seismic_1_1_basic_time_series" kindref="compound">BasicTimeSeries</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="89" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="89" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacemspass_1_1seismic_1a6931911b331ba8c70a3bf5365f548074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mspass::seismic::SEISMICMD_utc_convertible</definition>
        <argsstring>(&quot;utc_convertible&quot;)</argsstring>
        <name>SEISMICMD_utc_convertible</name>
        <qualifiedname>mspass::seismic::SEISMICMD_utc_convertible</qualifiedname>
        <param>
          <type>&quot;utc_convertible&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines boolean used in <ref refid="classmspass_1_1seismic_1_1_basic_time_series" kindref="compound">BasicTimeSeries</ref> for properly handling Relative/UTC time standards </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" line="92" column="19" declfile="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/keywords.h" declline="92" declcolumn="19"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Define metadata keys. </para>
    </briefdescription>
    <detaileddescription>
<para>This include file defines a set ofconst std::string values that serve as keys to Metadata get and put calls. They are placed in this one file to easy maintainability of the code base. This is essential because in MsPaSS we need to map Metadata keys to and from MongoDB database key names. If the schema needs to change due to some external constraint like assimilating some external code base we need only change the names here. The comments with each name are roughly the same as the concept line in the yaml file for the mspass schema at the time this file was created. Do not depend on an exact match, but the idea behind each phrase should not change (the concept). </para>
    </detaileddescription>
    <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/BasicSpectrum.h" line="6" column="1"/>
  </compounddef>
</doxygen>
