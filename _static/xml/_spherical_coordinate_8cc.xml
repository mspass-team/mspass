<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_spherical_coordinate_8cc" kind="file" language="C++">
    <compoundname>SphericalCoordinate.cc</compoundname>
    <includes refid="_spherical_coordinate_8h" local="yes">mspass/utility/SphericalCoordinate.h</includes>
    <includes local="no">float.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="2">
        <label>mspass/utility/SphericalCoordinate.h</label>
        <link refid="_spherical_coordinate_8h_source"/>
      </node>
      <node id="1">
        <label>/home/runner/work/mspass/mspass/cxx/src/lib/utility/SphericalCoordinate.cc</label>
        <link refid="_spherical_coordinate_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>float.h</label>
      </node>
      <node id="4">
        <label>math.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemspass">mspass</innernamespace>
    <innernamespace refid="namespacemspass_1_1utility">mspass::utility</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;mspass/utility/SphericalCoordinate.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;float.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mspass::utility<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>routine<sp/>takes<sp/>a<sp/>3-d<sp/>unit<sp/>vector,<sp/>nu,<sp/>and<sp/>converts<sp/>it</highlight></codeline>
<codeline lineno="6"><highlight class="comment">to<sp/>a<sp/>SphericalCoordinate<sp/>structure<sp/>which<sp/>is<sp/>returned.<sp/><sp/>The</highlight></codeline>
<codeline lineno="7"><highlight class="comment">input<sp/>coordinates<sp/>are<sp/>assume<sp/>to<sp/>be<sp/>standard,<sp/>right<sp/>handed</highlight></codeline>
<codeline lineno="8"><highlight class="comment">cartesian<sp/>coordinates<sp/>in<sp/>1,2,3<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">SphericalCoordinate<sp/>UnitVectorToSpherical(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nu[3])<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>SphericalCoordinate<sp/>xsc;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>xsc.<ref refid="structmspass_1_1utility_1_1_spherical_coordinate_1a8f9f987e89e175fecb85c9cbe5bdbc13" kindref="member">radius</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>xsc.theta<sp/>=<sp/>acos(nu[2]);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hypot(nu[0],<sp/>nu[1])<sp/>&lt;<sp/>DBL_EPSILON)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>xsc.phi<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>xsc.phi<sp/>=<sp/>atan2(nu[1],<sp/>nu[0]);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(xsc);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reciprocal<sp/>of<sp/>above.<sp/><sp/>A<sp/>bit<sp/>harder<sp/>as<sp/>it<sp/>has<sp/>to<sp/>handle<sp/>singular</highlight></codeline>
<codeline lineno="21"><highlight class="comment">case.<sp/><sp/>Note<sp/>the<sp/>double<sp/>vector<sp/>of<sp/>3<sp/>is<sp/>allocated<sp/>here<sp/>and<sp/>externally</highlight></codeline>
<codeline lineno="22"><highlight class="comment">needs<sp/>to<sp/>be<sp/>free<sp/>using<sp/>C++<sp/>delete<sp/>NOT<sp/>free.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*SphericalToUnitVector(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SphericalCoordinate<sp/>&amp;scor)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*nu<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[3];</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>vertical<sp/>vector<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(scor.theta)<sp/>&lt;=<sp/>DBL_EPSILON)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>nu[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>nu[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>nu[2]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>nu[0]<sp/>=<sp/>sin(scor.theta)<sp/>*<sp/>cos(scor.phi);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>nu[1]<sp/>=<sp/>sin(scor.theta)<sp/>*<sp/>sin(scor.phi);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>nu[2]<sp/>=<sp/>cos(scor.theta);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>pure<sp/>zeros<sp/>for<sp/>convenience</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(nu[i])<sp/>&lt;<sp/>DBL_EPSILON)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nu);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Other<sp/>procedures<sp/>conveniently<sp/>placed<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rad(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta_deg)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deg_to_rad(0.017453292519943);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>theta_deg<sp/>*<sp/>deg_to_rad;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta_rad)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rad_to_deg(57.295779513082321);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>theta_rad<sp/>*<sp/>rad_to_deg;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mspass::utility</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/mspass/mspass/cxx/src/lib/utility/SphericalCoordinate.cc"/>
  </compounddef>
</doxygen>
