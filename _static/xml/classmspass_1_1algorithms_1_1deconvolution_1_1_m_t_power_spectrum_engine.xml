<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine" kind="class" language="C++" prot="public">
    <compoundname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</compoundname>
    <includes refid="_m_t_power_spectrum_engine_8h" local="no">MTPowerSpectrumEngine.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a8965dd9992bc23686c899416fc01d833" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mspass::algorithms::deconvolution::MTPowerSpectrumEngine::taperlen</definition>
        <argsstring></argsstring>
        <name>taperlen</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::taperlen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="149" column="7" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1aa2184647214f98ca31c9b918ea95cabd" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mspass::algorithms::deconvolution::MTPowerSpectrumEngine::ntapers</definition>
        <argsstring></argsstring>
        <name>ntapers</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::ntapers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="150" column="7" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a7c667b205098c106878bcd43d6ee0c08" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mspass::algorithms::deconvolution::MTPowerSpectrumEngine::nfft</definition>
        <argsstring></argsstring>
        <name>nfft</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::nfft</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="151" column="7" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a755509d55edcea79ddea1652d7eb115d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mspass::algorithms::deconvolution::MTPowerSpectrumEngine::tbp</definition>
        <argsstring></argsstring>
        <name>tbp</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::tbp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="152" column="10" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1af38cc58cf5f4de6b5a4654c4fa5c4e3c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mspass::algorithms::deconvolution::MTPowerSpectrumEngine::operator_dt</definition>
        <argsstring></argsstring>
        <name>operator_dt</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::operator_dt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="153" column="10" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a1c890f6d04bf2cb6c276a79d70ba8b33" prot="private" static="no" mutable="no">
        <type><ref refid="classmspass_1_1utility_1_1dmatrix" kindref="compound">mspass::utility::dmatrix</ref></type>
        <definition>mspass::utility::dmatrix mspass::algorithms::deconvolution::MTPowerSpectrumEngine::tapers</definition>
        <argsstring></argsstring>
        <name>tapers</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::tapers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="154" column="28" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1aedb60b87afad3afa660be4e408766e0c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mspass::algorithms::deconvolution::MTPowerSpectrumEngine::deltaf</definition>
        <argsstring></argsstring>
        <name>deltaf</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::deltaf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="156" column="10" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a0986764ea5918f4436d751cd28bea3c6" prot="private" static="no" mutable="no">
        <type>gsl_fft_complex_wavetable *</type>
        <definition>gsl_fft_complex_wavetable* mspass::algorithms::deconvolution::MTPowerSpectrumEngine::wavetable</definition>
        <argsstring></argsstring>
        <name>wavetable</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::wavetable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="157" column="29" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a7276cdd1dd824732514a05fd8cf3f326" prot="private" static="no" mutable="no">
        <type>gsl_fft_complex_workspace *</type>
        <definition>gsl_fft_complex_workspace* mspass::algorithms::deconvolution::MTPowerSpectrumEngine::workspace</definition>
        <argsstring></argsstring>
        <name>workspace</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::workspace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="158" column="29" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="158" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a509f3db8c91ae8e97b241bd5da67cd61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::MTPowerSpectrumEngine</definition>
        <argsstring>()</argsstring>
        <name>MTPowerSpectrumEngine</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::MTPowerSpectrumEngine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor. Do not use as it produces a null object that is no functional. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="33" column="3" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/MTPowerSpectrumEngine.cc" bodystart="17" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1afa0ce9c1b2c9248d46ab794bf01d42b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::MTPowerSpectrumEngine</definition>
        <argsstring>(const int winsize, const double tbp, const int ntapers, const int nfftin=-1, const double dtin=1.0)</argsstring>
        <name>MTPowerSpectrumEngine</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::MTPowerSpectrumEngine</qualifiedname>
        <param>
          <type>const int</type>
          <declname>winsize</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>tbp</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>ntapers</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>nfftin</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>dtin</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>construct with full definition. </para>
        </briefdescription>
        <detaileddescription>
<para>This should be the normal constructor used to create this object. It creates and caches the Slepian tapers that are used on calls the apply method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>winsize</parametername>
</parameternamelist>
<parameterdescription>
<para>is the length of time windows in samples the operator will be designed to compute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tbp</parametername>
</parameternamelist>
<parameterdescription>
<para>is the time bandwidth product to use for the operator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ntapers</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of tapers to actually use for the operator. Note the maximum ntapers is always int(tbp*2). If ntapers is more than 2*tbp a mesage will be posted to cerr and ntapers set to tbp*2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nfftin</parametername>
</parameternamelist>
<parameterdescription>
<para>is the size of the fft workspace to use for computation. When less than the winsize (the default forces this) set to 2*winsize+1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtin</parametername>
</parameternamelist>
<parameterdescription>
<para>sets the operator sample interval stored in the object and used to compute frequency bin size from fft length. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="50" column="3" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/MTPowerSpectrumEngine.cc" bodystart="27" bodyend="81"/>
        <references refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a1dadcf9ec587fa2d48d04066ba1d55b4" compoundref="_m_t_power_spectrum_engine_8h" startline="126" endline="132">set_df</references>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a678a1167722867cfb20acc0c56932882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::MTPowerSpectrumEngine</definition>
        <argsstring>(const MTPowerSpectrumEngine &amp;parent)</argsstring>
        <name>MTPowerSpectrumEngine</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::MTPowerSpectrumEngine</qualifiedname>
        <param>
          <type>const <ref refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine" kindref="compound">MTPowerSpectrumEngine</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Standard copy constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="53" column="3" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/MTPowerSpectrumEngine.cc" bodystart="82" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a8232d61152acbe74c6a890a662f89c63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::~MTPowerSpectrumEngine</definition>
        <argsstring>()</argsstring>
        <name>~MTPowerSpectrumEngine</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::~MTPowerSpectrumEngine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. Not trivial as it has to delete the fft workspace and cached tapers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="56" column="3" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/MTPowerSpectrumEngine.cc" bodystart="95" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a51379e47b45995eb44c519c2672de77b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine" kindref="compound">MTPowerSpectrumEngine</ref> &amp;</type>
        <definition>MTPowerSpectrumEngine &amp; mspass::algorithms::deconvolution::MTPowerSpectrumEngine::operator=</definition>
        <argsstring>(const MTPowerSpectrumEngine &amp;parent)</argsstring>
        <name>operator=</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine" kindref="compound">MTPowerSpectrumEngine</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Standard assignment operator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="58" column="25" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/MTPowerSpectrumEngine.cc" bodystart="102" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1aa3c10c25ea2c6b82cf8bbe2991f16bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmspass_1_1seismic_1_1_power_spectrum" kindref="compound">mspass::seismic::PowerSpectrum</ref></type>
        <definition>PowerSpectrum mspass::algorithms::deconvolution::MTPowerSpectrumEngine::apply</definition>
        <argsstring>(const mspass::seismic::TimeSeries &amp;d)</argsstring>
        <name>apply</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::apply</qualifiedname>
        <param>
          <type>const <ref refid="classmspass_1_1seismic_1_1_time_series" kindref="compound">mspass::seismic::TimeSeries</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>\process a TimeSeries.</para>
<para>This is one of two methods for applying the multiaper algorithm to data. This one uses dt and data length to set the Rayleigh bin size (df). If the input data vector length is not the same as the operator length an elog complaint is posted to parent. Short data are processed but should be considered suspect unless the sizes differ by only a tiny fraction (e.g. and off by one error from rounding). Long data will be truncated on the right (i.e. sample 0 will be the start of the window used). The data return will be scaled to psd in units if 1/Hz.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>is the data to process </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vector containing estimated power spwecrum </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="73" column="34" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/MTPowerSpectrumEngine.cc" bodystart="116" bodyend="182"/>
        <references refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1aa3c10c25ea2c6b82cf8bbe2991f16bfe" compoundref="_m_t_power_spectrum_engine_8cc" startline="116" endline="182">apply</references>
        <references refid="classmspass_1_1seismic_1_1_basic_time_series_1af31c96c0e2173d7581e1c3a3f8bcfde8" compoundref="_basic_time_series_8h" startline="153" endline="153">mspass::seismic::BasicTimeSeries::dt</references>
        <references refid="classmspass_1_1seismic_1_1_power_spectrum_1a920cd0761252df4312168f4571165f2b" compoundref="_power_spectrum_8h" startline="26">mspass::seismic::PowerSpectrum::elog</references>
        <references refid="classmspass_1_1seismic_1_1_basic_spectrum_1a7400b002f21460fece1d5519dfbc26c7" compoundref="_basic_spectrum_8h" startline="84" endline="84">mspass::seismic::BasicSpectrum::kill</references>
        <references refid="classmspass_1_1utility_1_1_error_logger_1aa69873ba0aebf67e9ba24d01992c0bcf" compoundref="_error_logger_8cc" startline="72" endline="76">mspass::utility::ErrorLogger::log_error</references>
        <references refid="classmspass_1_1seismic_1_1_basic_time_series_1a347b349bb4e1f0e65978dfcd45ae3472" compoundref="_basic_time_series_8h" startline="171" endline="171">mspass::seismic::BasicTimeSeries::npts</references>
        <references refid="classmspass_1_1seismic_1_1_core_time_series_1ab044edb3fe5fe734cb577a4434f390a2" compoundref="_core_time_series_8h" startline="27">mspass::seismic::CoreTimeSeries::s</references>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1ab679e58c66c0c4a332350c7f4282e806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; mspass::algorithms::deconvolution::MTPowerSpectrumEngine::apply</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;d)</argsstring>
        <name>apply</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::apply</qualifiedname>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Low level processing of vector of data. </para>
        </briefdescription>
        <detaileddescription>
<para>This is lower level function that processes a raw vector of data. Since it does not know the sample interval it cannot compute the rayleigh bin size so if callers need that feature they must do that (simple) calculation themselves. Unlike the TimeSeries method this one will throw an exception if the input data size does not match the operator size. It returns power spectral density assuming a sample rate of 1. i.e. it scales to correct for the gsl fft scaling by of the forward transform by N.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>is the vector of data to process. d.size() must this-&gt;taperlen() value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vector containing estimated power spectrum (usual convention with 0 containing 0 frequency value) </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>throw</parametername>
</parameternamelist>
<parameterdescription>
<para>a MsPASSError if the size of d does not match operator length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="90" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1ada36c092fdc3aa128be8eb25d00349d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double mspass::algorithms::deconvolution::MTPowerSpectrumEngine::df</definition>
        <argsstring>() const</argsstring>
        <name>df</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::df</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the frquency bin size defined for this operator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="92" column="10" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a626438cc21ade06cfa7053c324ae58b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>vector&lt; double &gt; mspass::algorithms::deconvolution::MTPowerSpectrumEngine::frequencies</definition>
        <argsstring>()</argsstring>
        <name>frequencies</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::frequencies</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return and std::vector of all frequencies for spectral estimates this operator computes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="95" column="15" bodyfile="/home/runner/work/mspass/mspass/cxx/src/lib/algorithms/deconvolution/MTPowerSpectrumEngine.cc" bodystart="256" bodyend="264"/>
        <references refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a92db35500eda333738d2c650e0b6d82f" compoundref="_m_t_power_spectrum_engine_8h" startline="135" endline="146">nf</references>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a114db709279ea8ab275ba69fbdcbec13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int mspass::algorithms::deconvolution::MTPowerSpectrumEngine::taper_length</definition>
        <argsstring>() const</argsstring>
        <name>taper_length</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::taper_length</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the taper length. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="97" column="7" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1accf94d6d1dff859884d9c0aa1719994a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double mspass::algorithms::deconvolution::MTPowerSpectrumEngine::time_bandwidth_product</definition>
        <argsstring>() const</argsstring>
        <name>time_bandwidth_product</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::time_bandwidth_product</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve time-bandwidth product. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="99" column="10" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a10d4b650fdedd815652c1e4e86a0e715" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int mspass::algorithms::deconvolution::MTPowerSpectrumEngine::number_tapers</definition>
        <argsstring>() const</argsstring>
        <name>number_tapers</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::number_tapers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return number of tapers used by this engine. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="101" column="7" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1afaabbb574b28194bde51e45d1cfd2787" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int mspass::algorithms::deconvolution::MTPowerSpectrumEngine::fftsize</definition>
        <argsstring>() const</argsstring>
        <name>fftsize</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::fftsize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return size of fft used by this operator - usually not the same as taper length. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="104" column="7" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1af7ea0259803f6cac1c5e8166541b2f51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double mspass::algorithms::deconvolution::MTPowerSpectrumEngine::dt</definition>
        <argsstring>()</argsstring>
        <name>dt</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::dt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the internally cached required data sample interval. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="106" column="10" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a1dadcf9ec587fa2d48d04066ba1d55b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double mspass::algorithms::deconvolution::MTPowerSpectrumEngine::set_df</definition>
        <argsstring>(double dt)</argsstring>
        <name>set_df</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::set_df</qualifiedname>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Putter equivalent of df. </para>
        </briefdescription>
        <detaileddescription>
<para>The computation of the Rayleigh bin size is complicated a bit by the folding properties of fft algorithms that have to handle odd and even length inputs differently. This algorithm uses the internally set nfft value to set the frequency bin size for even or odd nfft and the input sample interval. NOTE POSSIBLE CONFUSION that input is time sample interval NOT the actual frquency bin size. The reason is that the odd/even issue makes df dependent on if the fft size is even or odd. We include this method as a convenience as that is an implementation detail for the fft algorithm.</para>
<para>Note also this method sets not just df but the internally stored sample interval (symbol operator_dt in the source code.)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>is the data sample interval (time domain)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>computed df </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="126" column="10" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="126" bodyend="132"/>
        <references refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1af7ea0259803f6cac1c5e8166541b2f51" compoundref="_m_t_power_spectrum_engine_8h" startline="106" endline="106">dt</references>
        <references refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a92db35500eda333738d2c650e0b6d82f" compoundref="_m_t_power_spectrum_engine_8h" startline="135" endline="146">nf</references>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a92db35500eda333738d2c650e0b6d82f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int mspass::algorithms::deconvolution::MTPowerSpectrumEngine::nf</definition>
        <argsstring>()</argsstring>
        <name>nf</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::nf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return tne number of frequency bins in estimates the operator will compute. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="135" column="7" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="135" bodyend="146"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a0602bfe66468920ac7a48431b2232fde" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void mspass::algorithms::deconvolution::MTPowerSpectrumEngine::save</definition>
        <argsstring>(Archive &amp;ar, const unsigned int version) const</argsstring>
        <name>save</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::save</qualifiedname>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="161" column="8" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="161" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1af2122de2c5193ebde4d1171e2dca92b6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void mspass::algorithms::deconvolution::MTPowerSpectrumEngine::load</definition>
        <argsstring>(Archive &amp;ar, const unsigned int version)</argsstring>
        <name>load</name>
        <qualifiedname>mspass::algorithms::deconvolution::MTPowerSpectrumEngine::load</qualifiedname>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="170" column="20" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="170" bodyend="180"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Multittaper power spectral estimator. </para>
    </briefdescription>
    <detaileddescription>
<para>The multitaper method uses averages of spectra windowed by Slepian functions. This class can be used to compute power spectra. For efficiency the design has constructors that build the Slepian functions and cache them in a private area. We use this model because computing spectra on a large data set in parallel will usually be done with a fixed time window. The expected use is that normally the engine is created once and passed as an argument to functions using it in a map operator.</para>
<para>This class uses the apply model for processing. It accepts raw vector or TimeSeries data. The former assumes the sample interval is 1 while the second scales the spectrum to have units of 1/Hz. </para>
    </detaileddescription>
    <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" line="29" column="1" bodyfile="/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/deconvolution/MTPowerSpectrumEngine.h" bodystart="29" bodyend="182"/>
    <listofallmembers>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1aa3c10c25ea2c6b82cf8bbe2991f16bfe" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>apply</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1ab679e58c66c0c4a332350c7f4282e806" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>apply</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1aedb60b87afad3afa660be4e408766e0c" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>deltaf</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1ada36c092fdc3aa128be8eb25d00349d6" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>df</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1af7ea0259803f6cac1c5e8166541b2f51" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>dt</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1afaabbb574b28194bde51e45d1cfd2787" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>fftsize</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a626438cc21ade06cfa7053c324ae58b4" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>frequencies</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1af2122de2c5193ebde4d1171e2dca92b6" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>load</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a509f3db8c91ae8e97b241bd5da67cd61" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>MTPowerSpectrumEngine</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1afa0ce9c1b2c9248d46ab794bf01d42b0" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>MTPowerSpectrumEngine</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a678a1167722867cfb20acc0c56932882" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>MTPowerSpectrumEngine</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a92db35500eda333738d2c650e0b6d82f" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>nf</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a7c667b205098c106878bcd43d6ee0c08" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>nfft</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1aa2184647214f98ca31c9b918ea95cabd" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>ntapers</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a10d4b650fdedd815652c1e4e86a0e715" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>number_tapers</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a51379e47b45995eb44c519c2672de77b" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>operator=</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1af38cc58cf5f4de6b5a4654c4fa5c4e3c" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>operator_dt</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a0602bfe66468920ac7a48431b2232fde" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>save</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a1dadcf9ec587fa2d48d04066ba1d55b4" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>set_df</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a114db709279ea8ab275ba69fbdcbec13" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>taper_length</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a8965dd9992bc23686c899416fc01d833" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>taperlen</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a1c890f6d04bf2cb6c276a79d70ba8b33" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>tapers</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a755509d55edcea79ddea1652d7eb115d" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>tbp</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1accf94d6d1dff859884d9c0aa1719994a" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>time_bandwidth_product</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a0986764ea5918f4436d751cd28bea3c6" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>wavetable</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a7276cdd1dd824732514a05fd8cf3f326" prot="private" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>workspace</name></member>
      <member refid="classmspass_1_1algorithms_1_1deconvolution_1_1_m_t_power_spectrum_engine_1a8232d61152acbe74c6a890a662f89c63" prot="public" virt="non-virtual"><scope>mspass::algorithms::deconvolution::MTPowerSpectrumEngine</scope><name>~MTPowerSpectrumEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
